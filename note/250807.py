"""
[250807]

<알고리즘 라이브 강의>

부분 집합 문제 : 유한 개의 정수로 이루어진 집합에서 조건에 맞는 부분 집합을 찾는 문제
※ 부분 집합의 수 : 집합의 원소가 n일때, 2^n개 (공집합 포함)
    > BF로는 한계가 있다

비트 연산자
- & : 비트 단위로 AND 연산
    ※ i & (1 << j) : i의 j번째 비트가 1인지를 검사
        ex) 1 << j 로 j번째 비트를 제외한 모든 비트를 0으로 만들었으므로 i와의 AND 연산을 통해 검증 가능
- | : 비트 단위로 OR 연산
- << : 피연산자의 비트 열을 왼쪽으로 이동
    ※ 1 << n : 2^n (원소가 n개일 경우의 모든 부분 집합의 수)
- >> : 피연산자의 비트 열을 오른쪽으로 이동

LSB, MSB


검색 : 저장되어 있는 자료 중 원하는 항목을 찾는 작업 (목적하는 탐색 키를 가진 항목을 찾는 것)
- 순차 검색 (O(N)) : 선형 자료를 대상으로 시행하는 직관적인 검색법으로 단순하지만 비효율적
    ※ 정렬되어 있는 경우, puring 작업이 중간에 일어날 수도 있기 때문에 조금은 더 효율적이지만 시간 복잡도는 변하지 않음
- 이진 검색 (O(logN)) : 정렬되어 있는 선형 자료를 대상으로 시행하는 검색법으로 자료 중심의 값과 비교하며 다음 위치를 결정
    ※ 자료의 삽입, 삭제 발생 시에 배열의 정렬 상태를 유지하는데 추가적인 리소스 낭비가 생김
    ※ DB에서 원본 데이터와 별개로 배열 인덱스를 추가하여 이진 탐색 트리 형태로 구현

정렬
- 선택 정렬 (O(n^2)) : 가장 작은 값의 원소부터 차례대로 선택하여 위치를 교환하는 정렬 방식
※ selection algorithm (O(kn)) : k번째로 큰/작은 원소를 찾는 방법 (전체 길이 n에 대해 진행하면 selection sort)


<실습>


"""